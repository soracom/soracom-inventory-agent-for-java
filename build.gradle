plugins {
    id 'org.ajoberstar.git-publish' version '0.4.0'
}

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
	apply plugin: 'maven-publish'

	group = 'io.soracom'
	version = '0.0.7-SNAPSHOT'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    
    jar {
		baseName = project.name
		version =  project.version
	}
		
    repositories {
    	mavenLocal()
        mavenCentral()
        maven { url 'https://soracom.github.io/maven-repository/' }
        jcenter()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

	task sourceJar(type: Jar) {
    	from sourceSets.main.allJava
	}

	publishing {
	    publications {
	        mavenJava(MavenPublication) {
	            from components.java
	            artifact sourceJar {
	                classifier "sources"
	            }
	        }
	    }
	    repositories {
	    	maven {
		        url file("$buildDir/dist-mvn")
	   		}
	   	}
	}    
}

project(':soracom-inventory-agent-for-java-core') {
    dependencies {
        compile "org.eclipse.leshan:leshan-client-core:1.0.0-M6"
        compile "org.eclipse.leshan:leshan-client-cf:1.0.0-M6"
        compile 'org.slf4j:slf4j-api:1.7.22'
        compile 'org.slf4j:slf4j-simple:1.7.22'
        compile 'io.soracom:soracom-krypton-client-for-java:0.1.0'
    }
}

project(':soracom-inventory-agent-for-java-example') {
    apply plugin: 'application'
    distZip {
        baseName = "soracom-inventory-agent-example"
    }
    distTar {
        baseName = "soracom-inventory-agent-example"
    }
    dependencies {
       	compile "commons-cli:commons-cli:1.3.1"
        compile project(':soracom-inventory-agent-for-java-core')
    }
    startScripts.enabled = false
    run.enabled = false
    createScript(project, 'io.soracom.inventory.agent.example.SORACOMInventoryAgentExample', 'soracom-inventory-agent-example-start')
}

def createScript(project, mainClass, name) {
    project.tasks.create(name: name, type: CreateStartScripts) {
        outputDir = new File(project.buildDir, 'scripts')
        mainClassName   = mainClass
        applicationName = name
        classpath = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
    }
    project.tasks[name].dependsOn(project.jar)
    project.applicationDistribution.with {
        into("bin") {
            from(project.tasks[name])
            fileMode = 0755
        }
        into("bin/script") {
            from("script")
        }
    } 
}


//use gradle gitPublishPush to push artifacts
gitPublish {
    repoUri = 'https://github.com/soracom/maven-repository.git'
    branch = 'gh-pages'
    repoDir = file("maven-repository")
    contents {
        from file("soracom-inventory-agent-for-java-core/build/dist-mvn")
        from file("soracom-inventory-agent-for-java-example/build/dist-mvn")
    }
    preserve {
        include '**'
    }
    commitMessage = 'Publishing a new archive'
}
task preparePush {
    subprojects.each { dependsOn("${it.name}:clean") }
    subprojects.each { dependsOn("${it.name}:build") }
    subprojects.each { dependsOn("${it.name}:publish") }
}
gitPublishPush.dependsOn preparePush
