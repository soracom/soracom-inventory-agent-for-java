plugins {
    id 'org.ajoberstar.git-publish' version '3.0.0'
}

apply plugin: 'org.ajoberstar.git-publish'

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group = 'io.soracom'
    version = '0.1.2-SNAPSHOT'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    jar {
        baseName = project.name
        version = project.version
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://soracom.github.io/maven-repository/' }
        jcenter()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
        repositories {
            maven {
                url file("$buildDir/dist-mvn")
            }
        }
    }
}

def leshanVersion = '1.3.1'

project(':soracom-inventory-agent-for-java-core') {
    dependencies {
        compile "org.eclipse.leshan:leshan-client-core:${leshanVersion}"
        compile "org.eclipse.leshan:leshan-client-cf:${leshanVersion}"
        compile 'org.slf4j:slf4j-api:1.7.30'
        compile 'org.slf4j:slf4j-simple:1.7.30'
        compile 'io.soracom:soracom-krypton-client-for-java:0.3.0'
    }
}

project(':soracom-inventory-agent-for-java-example') {
    apply plugin: 'application'
    distZip {
        baseName = "soracom-inventory-agent-example"
    }
    distTar {
        baseName = "soracom-inventory-agent-example"
    }
    dependencies {
        compile "commons-cli:commons-cli:1.3.1"
        compile project(':soracom-inventory-agent-for-java-core')
    }
    startScripts.enabled = false
    run.enabled = false
    createScript(project, 'io.soracom.inventory.agent.example.SORACOMInventoryAgentExample',
                 'soracom-inventory-agent-example-start')
}

def createScript(project, mainClass, name) {
    project.tasks.create(name: name, type: CreateStartScripts) {
        outputDir = new File(project.buildDir, 'scripts')
        mainClassName = mainClass
        applicationName = name
        classpath =
            project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
    }
    project.tasks[name].dependsOn(project.jar)
    project.applicationDistribution.with {
        into("bin") {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
            from(project.tasks[name])
            fileMode = 0755
        }
        into("bin/script") {
            from("script")
        }
    }
}

task preparePush(type: GradleBuild) {
    List selectedProjects = new ArrayList();
    subprojects.each {
        selectedProjects.add("${it.name}:clean".toString())
        selectedProjects.add("${it.name}:build".toString())
        selectedProjects.add("${it.name}:publish".toString())
    }
    tasks = selectedProjects
}

gitPublish {
    repoUri = 'https://github.com/soracom/maven-repository.git'
    branch = 'gh-pages'
    contents {
        from file("soracom-inventory-agent-for-java-core/build/dist-mvn")
        from file("soracom-inventory-agent-for-java-example/build/dist-mvn")
    }
    preserve {
        include '**'
    }
    commitMessage = 'Publishing a new archive'
}
gitPublishPush.dependsOn preparePush
